name: CI/CD with Conditional Deploy

on:
  push:
    branches:
      - main  # O workflow é acionado em push para a branch main
  pull_request:
    branches:
      - main  # O workflow também é acionado em pull requests

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]  # Execução em várias plataformas
        python-version: ['3.12']  # Testa apenas na versão mais atual do Python
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          # Ativar o ambiente virtual sem usar a ativação de shell
          .venv/bin/pip install -r requirements.txt

      - name: Run Flake8 Linting
        run: |
          .venv/bin/flake8 app  # Executa o linter no diretório app

      - name: Run Unit Tests
        run: |
          .venv/bin/pytest --cov=app --cov-report=xml  # Executa os testes com cobertura
        continue-on-error: true  # Permite continuar mesmo que os testes falhem

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        if: success()

      - name: Check for Vulnerabilities
        run: |
          .venv/bin/pip install pip-audit
          .venv/bin/pip-audit  # Verifica vulnerabilidades nas dependências

      - name: Run Pre-Commit Hooks
        run: |
          .venv/bin/pre-commit run --all-files  # Executa os hooks de pré-commit

  deploy:
    runs-on: ubuntu-latest  # O deploy será executado em Ubuntu
    needs: test  # O deploy depende da conclusão do job de testes
    if: success()  # O deploy será executado apenas se os testes forem bem-sucedidos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deploying application..."  # Comando de deploy
          # Adicione aqui os comandos específicos de deploy, como copiar arquivos para o servidor, etc.

name: CI/CD with Conditional Deploy

on:
  push:
    branches:
      - main  # O workflow é acionado em push para a branch main

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]  # Execução em várias plataformas
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Usando a versão mais atual do Python

      - name: Install dependencies
        run: |
          python -m venv .venv
          # Ativar o ambiente virtual e instalar dependências
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            .venv/bin/pip install -r requirements.txt  # Linux/MacOS
          else
            call .venv\Scripts\pip install -r requirements.txt  # Windows
          fi
        shell: bash  # Especifica o shell para Linux e MacOS

      - name: Run Flake8 Linting
        run: |
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            .venv/bin/flake8 app  # Linux/MacOS
          else
            call .venv\Scripts\flake8 app  # Windows
          fi
        shell: bash  # Especifica o shell para Linux e MacOS

      - name: Run Unit Tests
        run: |
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            .venv/bin/pytest --cov=app --cov-report=xml  # Linux/MacOS
          else
            call .venv\Scripts\pytest --cov=app --cov-report=xml  # Windows
          fi
        continue-on-error: true  # Permite continuar mesmo que os testes falhem
        shell: bash  # Especifica o shell para Linux e MacOS

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        if: success()  # Executa apenas se os testes forem bem-sucedidos

      - name: Check for Vulnerabilities
        run: |
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            .venv/bin/pip-audit  # Linux/MacOS
          else
            call .venv\Scripts\pip-audit  # Windows
          fi
        shell: bash  # Especifica o shell para Linux e MacOS

      - name: Run Pre-Commit Hooks
        run: |
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            .venv/bin/pre-commit run --all-files  # Linux/MacOS
          else
            call .venv\Scripts\pre-commit run --all-files  # Windows
          fi
        shell: bash  # Especifica o shell para Linux e MacOS

  deploy:
    runs-on: ubuntu-latest  # O deploy será executado em Ubuntu
    needs: test  # O deploy depende da conclusão do job de testes
    if: success()  # O deploy será executado apenas se os testes forem bem-sucedidos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deploying application..."  # Comando de deploy

name: Python Application CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          .venv/bin/activate
          pip install -r requirements.txt

      - name: Lint Code
        run: |
          .venv/bin/activate
          flake8 app

      - name: Run Unit Tests
        run: |
          .venv/bin/activate
          pytest --cov=app --cov-report=xml

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        if: success()

      - name: Check for Vulnerabilities
        run: |
          .venv/bin/activate
          pip install pip-audit
          pip-audit

      - name: Run Pre-Commit Hooks
        run: |
          .venv/bin/activate
          pre-commit run --all-files

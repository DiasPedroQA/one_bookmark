name: Python Application CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Run lint checks
      run: |
        source .venv/bin/activate
        flake8 app

    - name: Run unit tests
      run: |
        source .venv/bin/activate
        pytest --cov=app --cov-report=xml

    - name: Run integration tests
      run: |
        source .venv/bin/activate
        pytest tests/integration --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      if: success()  # Garante que essa etapa s√≥ execute se as anteriores forem bem-sucedidas
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Check for vulnerabilities
      if: success()  # Executa apenas se a etapa anterior for bem-sucedida
      run: |
        source .venv/bin/activate
        pip-audit

    - name: Run pre-commit
      if: success()  # Executa apenas se a etapa anterior for bem-sucedida
      run: |
        source .venv/bin/activate
        pre-commit run --all-files

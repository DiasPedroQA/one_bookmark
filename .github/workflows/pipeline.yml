name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Setup do ambiente Conda
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: miniconda_env
          auto-activate-base: false
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --user
          pip uninstall argcomplete -y --user  # Se for necessário
          pip install pip-tools --user
          pip-compile requirements.in --user
          pip-sync requirements.txt --user
          pip install flake8 black pytest pytest-cov --user

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  # Linting e formatação do código
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Activate Conda environment
        run: source ~/.bashrc && conda activate miniconda_env

      - name: Run flake8
        run: flake8 src/ tests/

      - name: Check code format with Black
        run: black --check src/ tests/

  # Testes e cobertura de código
  test:
    runs-on: ubuntu-latest
    needs: lint

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: '#R1040grau$'
          MYSQL_DATABASE: db_gerenciador_arquivos
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Activate Conda environment
        run: source ~/.bashrc && conda activate miniconda_env

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-fail-under=80

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

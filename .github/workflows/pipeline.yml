name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job de instalação e configuração do ambiente
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv one_venv
          source one_venv/bin/activate
          pip install -r requirements.txt

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  # Job de linting e formatação
  lint:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv one_venv
          source one_venv/bin/activate
          pip install flake8 black

      - name: Run flake8
        run: |
          source one_venv/bin/activate
          flake8 src/ tests/

      - name: Check code format with Black
        run: |
          source one_venv/bin/activate
          black --check src/ tests/

  # Job para rodar testes com cobertura de código
  test:
    runs-on: ubuntu-latest
    needs: lint

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: db_gerenciador_arquivos
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv one_venv
          source one_venv/bin/activate
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          source one_venv/bin/activate
          pytest --cov=src --cov-report=xml --cov-report=term-missing tests/

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  # Job de verificação de cobertura mínima
  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install coverage and check minimum coverage
        run: |
          python -m venv one_venv
          source one_venv/bin/activate
          pip install coverage
          coverage report --fail-under=80
